name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Run tests
      run: npm test
    
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Extract release notes
      id: release_notes
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        NOTES=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '1d;$d')
        
        # Handle multiline output
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "NOTES<<$EOF" >> $GITHUB_OUTPUT
        echo "$NOTES" >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## gomcp v${{ steps.version.outputs.VERSION }}
          
          ${{ steps.release_notes.outputs.NOTES }}
          
          ### Installation
          ```bash
          npm install -g gomcp@${{ steps.version.outputs.VERSION }}
          # or
          npx gomcp@${{ steps.version.outputs.VERSION }}
          ```
          
          ### Full Changelog
          https://github.com/coolwithyou/gomcp/blob/main/CHANGELOG.md
        draft: false
        prerelease: false
    
    - name: Check npm package
      run: |
        npm pack --dry-run
        echo "Package will be published as:"
        npm view . name version
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    - name: Verify npm publish
      run: |
        sleep 10  # Wait for npm to update
        PUBLISHED_VERSION=$(npm view gomcp version)
        EXPECTED_VERSION=${{ steps.version.outputs.VERSION }}
        if [ "$PUBLISHED_VERSION" != "$EXPECTED_VERSION" ]; then
          echo "Error: Published version ($PUBLISHED_VERSION) doesn't match expected ($EXPECTED_VERSION)"
          exit 1
        fi
        echo "âœ… Successfully published gomcp@$PUBLISHED_VERSION"